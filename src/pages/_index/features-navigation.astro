---
import type { IconName } from "@/lib/lucide";
import Navigation from "./features-nav/navigation-card.astro";

interface NavCard {
  id: string | number;
  icon: IconName;
  title: string;
  subTitle: string;
}
interface Props {
  title: string;
  cards: NavCard[];
}

const { title, cards } = Astro.props;
---

<div class="mt-8 grid gap-12 rounded-2xl bg-secondary p-16">
  <h2 class="text-3xl font-bold">
    {title}
  </h2>
  <card-selector class="grid gap-4">
    {
      cards.map(({ id, title, subTitle, icon }) => (
        <Navigation data-key={id} icon={icon} title={title}>
          {subTitle}
        </Navigation>
      ))
    }
  </card-selector>
</div>

<script>
  class NavigationCardSelector extends HTMLElement {
    connectedCallback() {
      const cards = this.querySelectorAll(`div[id="nav-card"]`);

      if (!cards || cards.length < 2 || !cards[0]) {
        throw new Error("No card found in the card selector.");
      }

      let selectedKey = cards[0].getAttribute("data-key");
      cards[0].setAttribute("data-selected", "true");

      cards.forEach((card) => {
        card.addEventListener("click", () => {
          const cardKey = card.getAttribute("data-key");

          if (cardKey === selectedKey) return;

          cards.forEach((c) => c.setAttribute("data-selected", "false"));

          selectedKey = cardKey;
          card.setAttribute("data-selected", "true");
        });
      });
    }
  }
  customElements.define("card-selector", NavigationCardSelector);
</script>
